{"version":3,"sources":["constants/filters_values.js","constants/actions.js","header/Header.js","table_data/Table_data.js","data_modeling/Data_modeling.js","App/App.js","App/index.js","reducers/data.js","reducers/flow_control.js","reducers/filter.js","reducers/errors.js","reducers/index.js","saga.js","index.js"],"names":["filter_value","start","Date","end","CHANGE_DATE","PAUSED","CANSEL_PAUSED","ERROR_GET_DATA","CLEAR_ERROR_DATA","CHANGE_COUNT_ROW","CHANGE_REFRESH_DATA","LimitCountRowTable","countRowTable","useSelector","state","filter","dispatch","useDispatch","onChangeCountRowsTable_zero","Infinity","type","payload","className","style","display","for","min","step","id","value","onChange","Number","name","marginTop","marginBottom","onClick","InputsValues","DelayOutData","delay_refresh_data","Error_messages","error_messages","errors","map","error","index","message","date","textError","closable","onClose","onCloseHandler","Header","textAlign","DatesArrond","ButtonProcessing","loading","data","disabled","placeholder","format","widthMax","moment","dateString","id_period","_d","marginLeft","paused","flow_control","requestData","headerTableStyles","width","HeaderTable","row_styles","Ind","length","Object","keys","data_obj","Row","id_obj","undefined","console","log","ID","NumCode","CharCode","Nominal","Name","Value","Previous","toLocaleDateString","Row_memo","React","memo","Table_data","data_arr","overflow","height","Data_modeling","App","initialState","combineReducers","action","push","splice","getData","fetch_data","mySaga","getData_onDate","year","month","a","String","fetch","padStart","res","json","newValuteArr","values","Valute","sort","b","newValuteObj","forEach","element","error_message","getResultData","obj_data","uuid","select","put","limitCountRowTable","delay","call","getFullYear","getMonth","getDate","setDate","new_valute","id_prop","counts","countsRow","take","takeLatest","all","sagaMiddleware","createSagaMiddleware","rootElement","document","getElementById","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.86aa0b6e.chunk.js","sourcesContent":["export const filter_value = {start:new Date(2020, 7, 1),end:new Date(2020, 7, 2)}\r\nexport const countRowTable = 10;\r\nexport const delay_refresh_data = 1000;","export const CHANGE_DATE = \"CHANGE_DATE\"\r\nexport const START_GET_DATA = \"START_GET_DATA\"\r\nexport const REQUEST_DATA = \"REQUEST_DATA\"\r\nexport const REQUEST_DATA_FINISHED = \"REQUEST_DATA_FINISHED\"\r\nexport const SUCCESS_GET_DATA = \"SUCCESS_GET_DATA\"\r\nexport const PAUSED = \"PAUSED\"\r\nexport const CANSEL_PAUSED = \"CANSEL_PAUSED\"\r\nexport const ERROR_GET_DATA = \"ERROR_GET_DATA\"\r\nexport const CLEAR_ERROR_DATA = \"CLEAR_ERROR_DATA\"\r\nexport const CHANGE_COUNT_ROW = \"CHANGE_COUNT_ROW\"\r\nexport const CHANGE_REFRESH_DATA = \"CHANGE_REFRESH_DATA\"","import React,{useCallback,useEffect} from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {START_GET_DATA,CHANGE_DATE,CHANGE_COUNT_ROW,CHANGE_REFRESH_DATA,CLEAR_ERROR_DATA,PAUSED,CANSEL_PAUSED} from '../constants/actions'\r\nimport moment from 'moment'\r\nimport {Button, DatePicker,InputNumber,Checkbox,notification,Alert} from 'antd';\r\n\r\nimport './Header.css';\r\n\r\n\r\nfunction LimitCountRowTable(){\r\n\r\n    let countRowTable =  useSelector((state) => state.filter.countRowTable);\r\n    const dispatch = useDispatch();\r\n    const onChangeCountRowsTable_zero = ()=>{\r\n\r\n        if (countRowTable!==Infinity){\r\n            dispatch({ type: CHANGE_COUNT_ROW,payload:Infinity})\r\n        }\r\n        else{\r\n            dispatch({ type: CHANGE_COUNT_ROW,payload:10})\r\n        }\r\n       \r\n    }\r\n\r\n    const onChangeCountRowsTable = (value)=>{\r\n        if (value){\r\n            dispatch({ type: CHANGE_COUNT_ROW,payload:Number(value)})\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    return(\r\n        <div className=\"header-inputNumber-cont-first\" >\r\n        <div style={{display:(countRowTable===Infinity)?\"none\":\"block\"}}> \r\n            <label for=\"countRowTable\" className=\"header-inputNumber-cont-first-label\">Количество записей в таблице</label> \r\n            <InputNumber min={10} step={10} id=\"countRowTable\" value={countRowTable} onChange={onChangeCountRowsTable} />\r\n        </div>\r\n        <div className=\"chekLimited\"> \r\n        { countRowTable!==Infinity && <Checkbox name=\"countRows_zero\"  value={countRowTable} onChange={onChangeCountRowsTable_zero}>\r\n            <span>Любое количество</span> \r\n         </Checkbox> }\r\n\r\n         { countRowTable===Infinity && <Button type=\"primary\" style={{ marginTop: \"40px\", marginBottom: \"40px\" }} onClick={onChangeCountRowsTable_zero}> \r\n         <span>Задать лимит записей</span>  \r\n         </Button> }\r\n   \r\n        </div>\r\n        \r\n    </div>)\r\n    \r\n}\r\n\r\nfunction InputsValues(){\r\n \r\n return(<div className=\"header-inputNumber-cont\" >\r\n         <LimitCountRowTable />\r\n         <DelayOutData />\r\n        </div>);\r\n}\r\n//disabled={loading}\r\n\r\nfunction DelayOutData(){\r\n\r\n    let delay_refresh_data =  useSelector((state) => state.filter.delay_refresh_data);\r\n    const dispatch = useDispatch();\r\n    const onChangeDelay_Refresh_Data = (value)=>{\r\n        if (value){\r\n        dispatch({ type: CHANGE_REFRESH_DATA,payload:value})\r\n        }\r\n    }  \r\n\r\n    \r\n\r\n    return(\r\n        <div className=\"header-inputNumber-cont-first\" >\r\n            <label for=\"delay_refresh_data\" className=\"header-inputNumber-cont-first-label\">Задержка вывода в миллесекундах</label> \r\n            <InputNumber  min={500} step={100} id=\"delay_refresh_data\"\r\n                value={delay_refresh_data} onChange={onChangeDelay_Refresh_Data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Error_messages(){\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   const error_messages = useSelector((state) => state.errors.error_messages);\r\n    \r\n   const onCloseHandler = (index) => {\r\n    dispatch({type:CLEAR_ERROR_DATA,payload:index})\r\n}\r\n  /*  \r\n   useEffect(()=>{\r\n \r\n    if (error_messages.length>0){\r\n\r\n        error_messages.forEach((error,index) => {\r\n             notification.error({\r\n                message: \"Ошибка получения данных на дату \" + error.date + \", код ошибки: \" + error.textError,\r\n                duration:3,\r\n                description:\r\n                  \"Ошибка получения данных\",\r\n                  onClose:()=>{onCloseHandler(index)} ,\r\n              });    \r\n        });\r\n\r\n        \r\n       }\r\n},)\r\n*/\r\n    return(<>{\r\n        error_messages.map((error,index) => (<Alert\r\n            message={\"Ошибка получения данных на дату \" + error.date + \", код ошибки: \" + error.textError}\r\n            //description=\"Ошибка получения данных\"\r\n            type=\"error\"\r\n            closable\r\n            onClose={()=>{onCloseHandler(index)}}\r\n          />))\r\n         }\r\n    </>)\r\n        /*{ error_messages.length>0 && <ul>{error_messages.map((error)=>(<li>{\r\n            message.error(\"Ошибка, нет данных за период: \"+\r\n             error.date.year + \r\n             \"-\" + error.date.month + \"-\" + \r\n             error.date.date + \", error: \" + \r\n             error.textError )}</li>))\r\n            }</ul>}*/\r\n\r\n    \r\n}\r\n\r\nexport default function Header() {\r\n    \r\n    \r\n    \r\n    return(<>\r\n            <h1 style={{textAlign:\"center\"}}>Таблица валют за произволный период:</h1>\r\n            <DatesArrond/>\r\n            <InputsValues/>\r\n            <Error_messages/> \r\n            <ButtonProcessing/>\r\n        </>);\r\n\r\n    \r\n}\r\n\r\nfunction DatesArrond(){\r\n    const start = useSelector((state) => state.filter.start);\r\n    const end = useSelector((state) => state.filter.end);\r\n    const loading = useSelector((state) => state.data.loading);\r\n    const dispatch = useDispatch();\r\n    return(\r\n            <div className=\"header-dates-cont\" >\r\n                    \r\n           <label for=\"start\" className=\"header-dates-cont-label\">Начало</label> \r\n           <DatePicker disabled={loading} placeholder=\"Начало\" id=\"start\" format={'DD-MM-YYYY'} style={{ widthMax: '20%' }} value={start===\"\"?\"\":moment(start)} onChange={(date, dateString)=>{\r\n      \r\n               dispatch({ type: CHANGE_DATE,payload:{id_period:\"start\",value:date===null?\"\":date._d} })\r\n   \r\n           }} />\r\n           <label for=\"start\" className=\"header-dates-cont-label\" style={{marginLeft:\"20px\"}}>Конец</label> \r\n           <DatePicker disabled={loading} placeholder=\"Конец\" id=\"end\" format={'DD-MM-YYYY'} style={{ widthMax: '20%' }} value={end===\"\"?\"\":moment(end)} onChange={(date, dateString)=>{\r\n               \r\n               dispatch({ type: CHANGE_DATE,payload:{id_period:\"end\",value:date===null?\"\":date._d} })\r\n   \r\n           }} />\r\n           </div>)\r\n        \r\n}\r\n\r\nfunction ButtonProcessing(){\r\n    const start = useSelector((state) => state.filter.start);\r\n    const end = useSelector((state) => state.filter.end);\r\n    const loading = useSelector((state) => state.data.loading);\r\n    const paused = useSelector((state) => state.flow_control.paused);\r\n    const requestData = useSelector((state) => state.data.requestData);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handlerOnclick = () => {\r\n        if (\r\n            start === \"\" ||\r\n            end === \"\"\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (!loading && !paused) {\r\n            dispatch({\r\n                type: START_GET_DATA,\r\n                payload: {\r\n                    start: start,\r\n                    end: end\r\n                }\r\n            });\r\n        } else if (loading && !paused) {\r\n            \r\n            dispatch({ type: PAUSED })\r\n\r\n        } else if (loading && paused) {\r\n\r\n            dispatch({ type: CANSEL_PAUSED })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"header-buttons-cont\" >\r\n        <Button type=\"primary\" style={{ marginTop: \"40px\", marginBottom: \"40px\" }} onClick={handlerOnclick}  \r\n        disabled={ (start === \"\" || end === \"\" ||!requestData)}>\r\n            {!loading && !paused && \"Загрузить данные... \"}\r\n            {loading && !paused && \"Приостановить... \"}\r\n            {loading && paused && \"Продолжить... \"}\r\n        </Button>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './Table_data.css';\r\n\r\nconst headerTableStyles = { width: \"30%\" }\r\nfunction HeaderTable() {\r\n    return (\r\n      <div className=\"row-table row-table-header\">\r\n        <div> Дата </div>\r\n        <div> № п/п</div>\r\n        <div> ID </div>\r\n        <div> Код </div>\r\n        <div> Код(симв) </div>\r\n        <div> Номинал </div>\r\n        <div style={headerTableStyles}> Наименование </div>\r\n        <div> Значение </div>\r\n        <div> Предыдущее </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const row_styles = { width: \"30%\", textAlign: \"left\" }\r\n\r\nfunction Ind({index}){\r\n\r\n\r\n  const length = useSelector((state) => Object.keys(state.data.data_obj).length);\r\n \r\n  return(\r\n    <> {length-index}</>\r\n  )\r\n}\r\n\r\n  function Row({ id_obj, index }) {\r\n  \r\n      const data = useSelector((state) => state.data.data_obj[id_obj]);\r\n        \r\n      if (data===undefined){\r\n          return(null)\r\n      }\r\n      \r\n        console.log(data)\r\n\r\n        const { ID, NumCode, CharCode, Nominal, Name, Value, Previous, start } = data;\r\n    \r\n        return (\r\n        <div className=\"row-table animation\">\r\n          <div> {start.toLocaleDateString()} </div>\r\n          <div> <Ind index={index}/></div>\r\n          <div> {ID} </div>\r\n          <div> {NumCode} </div>\r\n          <div> {CharCode} </div>\r\n          <div> {Nominal} </div>\r\n          <div style={row_styles}>{Name}</div>\r\n          <div> {Value} </div>\r\n          <div> {Previous} </div>\r\n        </div>\r\n        );\r\n  }\r\n  \r\n  \r\nconst Row_memo = React.memo(Row)\r\n\r\nfunction Table_data() {\r\n    const data_arr = useSelector((state) => state.data.data_arr);\r\n    \r\n    return (<>\r\n    <HeaderTable/>\r\n    <div className=\"table-data-main\" style={{overflow: \"auto\", width:\"100%\",height:\"400px\"}}>\r\n        \r\n        <div className=\"table-data-data\">\r\n          {data_arr.map((id_obj, index) => (<Row_memo id_obj={id_obj} index={index} />))}\r\n        </div>    \r\n\r\n    </div>\r\n    </>\r\n    )\r\n    \r\n}\r\n\r\n\r\n\r\nexport default Table_data\r\n\r\n","import React from 'react'\r\nimport Header from '../header/Header'\r\nimport Table_data from \"../table_data/Table_data\"\r\nimport './Data_modeling.css';\r\nexport default function Data_modeling(){\r\n    return (\r\n        <>\r\n         <Header />\r\n         <div className=\"data_modeling_cont\" >\r\n              <Table_data />\r\n         </div>\r\n      </>\r\n     );\r\n }\r\n","\nimport React, { useEffect } from \"react\";\nimport Data_modeling from \"../data_modeling/Data_modeling\"\n//import { useDispatch } from 'react-redux';\n//import {CHANGE_DATE} from \"./constants/actions\"\n//const dispatch = useDispatch();\nexport const App = ()=>{\n  /* useEffect(()=>{\n   useDispatch({type:CHANGE_DATE,})\n   },[])*/\n   return (<><Data_modeling/></>);\n}\n","import './App.css';\r\nimport {App} from \"./App\"\r\n\r\nexport  default App\r\n","import {START_GET_DATA,REQUEST_DATA,REQUEST_DATA_FINISHED,SUCCESS_GET_DATA} from '../constants/actions'\r\n\r\nconst initialState = {\r\n    data_arr: [],\r\n    data_obj: {},\r\n    requestData: true,\r\n    loading: false,\r\n}\r\n\r\nexport const data = (state = initialState,action)=> {\r\n\r\n  switch (action.type) {\r\n       case \"START_GET_DATA\":\r\n          return {\r\n              ...state,\r\n              loading: true,\r\n              requestData: true,\r\n          };\r\n\r\n      case \"REQUEST_DATA\":\r\n          return {\r\n              ...state,\r\n              requestData: false\r\n          }\r\n      case \"REQUEST_DATA_FINISHED\":\r\n          return {\r\n              ...state,\r\n              requestData: true\r\n          }\r\n\r\n      case \"SUCCESS_GET_DATA\":\r\n         if (action.payload.data_arr.length){\r\n            state.data_arr.push(action.payload.data_arr[0])\r\n         }\r\n         \r\n        \r\n          return {\r\n              ...state,\r\n              loading: action.payload.loading,\r\n              data_arr: [ ...state.data_arr],\r\n              data_obj: {...state.data_obj, ...action.payload.data_obj },\r\n          };\r\n      default:\r\n          return state;\r\n  }\r\n}","import {PAUSED,CANSEL_PAUSED} from '../constants/actions'\r\n\r\nconst initialState = {paused: false}\r\n\r\n export const flow_control = (state = initialState,action) => {\r\n\r\n   // console.log(action)\r\n\r\n  switch (action.type) {\r\n         case PAUSED:\r\n          return {\r\n              ...state,\r\n              paused: true\r\n          }\r\n      case CANSEL_PAUSED:\r\n\r\n          return {\r\n              ...state,\r\n              paused: false\r\n          }\r\n     \r\n      default:\r\n          return state;\r\n  }\r\n}","import {CHANGE_DATE,CHANGE_COUNT_ROW,CHANGE_REFRESH_DATA} from '../constants/actions'\r\nimport {filter_value,countRowTable,delay_refresh_data} from '../constants/filters_values'\r\n\r\nconst initialState = {start: filter_value.end, end: filter_value.end,countRowTable:countRowTable,delay_refresh_data:delay_refresh_data}\r\n\r\nexport const filter = (state=initialState, action)=>{\r\n  console.log(action)\r\n  switch (action.type) {\r\n      case CHANGE_DATE:\r\n          return {\r\n               ...state, [action.payload.id_period]:action.payload.value }\r\n      case CHANGE_COUNT_ROW:\r\n          return {\r\n            ...state, countRowTable:action.payload }\r\n      case CHANGE_REFRESH_DATA:\r\n              return {\r\n                ...state, delay_refresh_data:action.payload }                \r\n      \r\n\r\n      default:\r\n          return state;\r\n  }\r\n}\r\n\r\n","\r\nimport {ERROR_GET_DATA,CLEAR_ERROR_DATA} from '../constants/actions'\r\n\r\nconst initialState = {\r\n    error_messages: []\r\n}\r\n\r\nexport const  errors  =  (\r\n  state = initialState,\r\n  action\r\n) => {\r\n  \r\n  switch (action.type) {\r\n      \r\n      case ERROR_GET_DATA:\r\n        \r\n          return {\r\n              ...state,\r\n              error_messages: [...state.error_messages,action.payload]\r\n          };\r\n\r\n\r\n        case CLEAR_ERROR_DATA:\r\n          state.error_messages.splice(action.payload,1)\r\n        return {\r\n            ...state,\r\n            error_messages: [...state.error_messages]\r\n        };\r\n      default:\r\n          return state;\r\n  }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport {data} from \"./data\"\r\nimport {flow_control} from \"./flow_control\"\r\nimport {filter} from \"./filter\"\r\nimport {errors} from \"./errors\"\r\n\r\nexport default combineReducers({\r\n  data,\r\n  filter,\r\n  flow_control,\r\n  errors\r\n});\r\n","import { call, put, takeLatest,take, delay, select, all } from \"redux-saga/effects\";\r\n\r\nimport {v4 as uuid} from \"uuid\"\r\n\r\nasync function getData_onDate(year, month, date) {\r\n  month = String(month);\r\n  date = String(date);\r\n  let data = {};\r\n  try {\r\n    const res = await fetch(\r\n      `https://www.cbr-xml-daily.ru/archive/${year}/${month.padStart(\r\n        2,\r\n        \"0\"\r\n      )}/${date.padStart(2, \"0\")}/daily_json.js`\r\n    );\r\n    data = await res.json();\r\n\r\n    const newValuteArr = Object.values(data.Valute).sort((a,b)=>{if (a.Name>b.Name){return -1}})//отсортированный по наименованию  массив\r\n\r\n    let newValuteObj = {}//Объект отсортированный по наименованию валют.\r\n  \r\n    newValuteArr.forEach((element)=>{\r\n     newValuteObj[element.CharCode] = element\r\n    })\r\n  \r\n    data.Valute = newValuteObj\r\n\r\n\r\n  } catch (error) {\r\n    const dateString = String(date).padStart(2,\"0\") +\".\"+ String(month).padStart(2,\"0\") +\".\"+ String(year).padStart(4,\"0\");  \r\n    data.error_message = {date:dateString,textError:error}\r\n    \r\n  }\r\n  \r\n\r\n  //Valute:\r\n  //AMD: {ID: \"R01060\", NumCode: \"051\", CharCode: \"AMD\", Nominal: 100, Name: \"Армянских драмов\", …}\r\n\r\n\r\n\r\n  return data; //  Массив { Valute , error_message - сообщение об ошибке } \r\n}//getData_onDate(year, month, date)\r\n\r\n\r\n  function getResultData(obj_data,  loading) {\r\n    const data_obj = {};\r\n  \r\n    const kod = uuid();\r\n   \r\n    data_obj[kod] = obj_data;\r\n\r\n  return { data_arr:Object.keys(data_obj), data_obj ,loading };\r\n}\r\n\r\nfunction* getData() {\r\n \r\n  let {start,end}  = yield select((state) => state.filter);\r\n  start = new Date(+start);\r\n  end = new Date(+end);\r\n\r\n  yield put({type: \"REQUEST_DATA\"})\r\n    \r\n\r\n  while (start <= end) {\r\n    \r\n\r\n    const countRowTable = yield select((state) => state.data.data_arr.length);\r\n    let limitCountRowTable = yield select((state) => state.filter.countRowTable);\r\n    let delay_refresh_data = yield select((state) => state.filter.delay_refresh_data); \r\n    yield delay(delay_refresh_data);\r\n\r\n    if (countRowTable>limitCountRowTable){\r\n      yield put({type: \"REQUEST_DATA_FINISHED\"})\r\n      yield put({type: \"SUCCESS_GET_DATA\",payload: {data_arr:[],data_obj:{},loading:false} });\r\n      break\r\n    }\r\n\r\n    const data = yield call(getData_onDate, start.getFullYear(),start.getMonth() + 1,start.getDate());\r\n   \r\n    if (data.error_message){  \r\n      console.log(\"=======================================\")\r\n      yield put({ type: \"ERROR_GET_DATA\", payload: data.error_message });\r\n\r\n      start.setDate(start.getDate() + 1\r\n      ); continue }\r\n    \r\n    if (Object.keys(data.Valute).length > 0) {\r\n\r\n     const  new_valute={}\r\n\r\n     Object.keys(data.Valute).forEach(id_prop => {\r\n        new_valute[id_prop] = data.Valute[id_prop]\r\n        new_valute[id_prop].start = new Date(+start) //.toLocaleDateString()\r\n      });\r\n      \r\n    let counts = 0 \r\n     \r\n    const countsRow = Object.keys(new_valute).length\r\n\r\n    for (let id in new_valute){\r\n\r\n      counts+=1\r\n\r\n      limitCountRowTable = yield select((state) => state.filter.countRowTable);\r\n\r\n      if (countRowTable+counts>limitCountRowTable){\r\n\r\n        if (counts===1){\r\n          yield put({type: \"REQUEST_DATA_FINISHED\"})\r\n        }\r\n\r\n        yield put({\r\n         type: \"SUCCESS_GET_DATA\",\r\n         payload: {data_arr:[],data_obj:{},loading:false} \r\n        });\r\n        break\r\n      }\r\n\r\n      delay_refresh_data = yield select((state) => state.filter.delay_refresh_data); \r\n\r\n      yield delay(delay_refresh_data);\r\n\r\n      let paused = yield select((state) => state.flow_control.paused);\r\n\r\n      if (paused){\r\n        yield take(\"CANSEL_PAUSED\")\r\n      }\r\n      \r\n      yield put({\r\n       type: \"SUCCESS_GET_DATA\", payload: getResultData(new_valute[id], ( (+start===+end) && (counts===countsRow))?false:true)});\r\n      \r\n      \r\n      \r\n      if (counts===1){\r\n        yield put({type: \"REQUEST_DATA_FINISHED\"})\r\n      }\r\n\r\n    }\r\n\r\n      }\r\n    \r\n    else {\r\n      //yield put({ type: \"ERROR_GET_DATA\", payload: data.error_message });\r\n    }\r\n    start.setDate(start.getDate() + 1);\r\n  }\r\n\r\n  \r\n  const loading = yield select((state) => state.data.loading);\r\n  if (loading){\r\n    yield put({type: \"REQUEST_DATA_FINISHED\"})\r\n    yield put({type: \"SUCCESS_GET_DATA\",payload: {data_arr:[],data_obj:{},loading:false} });\r\n  }\r\n\r\n}\r\n\r\nfunction* fetch_data() {\r\n  yield takeLatest(\"START_GET_DATA\", getData);\r\n}\r\n\r\nfunction* mySaga() {\r\n  yield all([fetch_data()]);\r\n}\r\n\r\nexport default mySaga;\r\n\r\n\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {filter_value} from './constants/filters_values';\n//import { ConnectedRouter, routerMiddleware } from \"react-router-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\n//import { composeWithDevTools } from \"redux-devtools-extension\";\n//import createHistory from \"history/createBrowserHistory\";\n\nimport App from \"./App\";\nimport reducers from \"./reducers\";\n//import { rootSaga } from \"./sagas\";\n//import saga from \"./saga\";\n\nimport \"antd/dist/antd.css\";\n\nimport mySaga from \"./saga\";\n\n\nconst sagaMiddleware = createSagaMiddleware(mySaga);\n\nconst rootElement = document.getElementById(\"root\");\n\nconst store = createStore( reducers, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(mySaga);\n\nReactDOM.render(\n    <React.StrictMode >\n        <Provider store = { store }>\n        <App />\n        </Provider> \n    </React.StrictMode>,\n    rootElement\n);\nconsole.log(\"Hellow1\")"],"sourceRoot":""}